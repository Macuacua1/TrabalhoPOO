package Modelo;
// Generated Nov 1, 2015 5:59:57 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Produto generated by hbm2java
 */
@Entity
@Table(name="produto"
    ,catalog="clever"
    , uniqueConstraints = {@UniqueConstraint(columnNames="nome_produto"), @UniqueConstraint(columnNames="codigo_barras")} 
)
public class Produto  implements java.io.Serializable {


     private Integer idProduto;
     private Tipoproduto tipoproduto;
     private String nomeProduto;
     private int quantidade;
     private double valorCompra;
     private double valorVenda;
     private int estoqueMax;
     private int estoqueMin;
     private String unidade;
     private double desconto;
     private Date validade;
     private int codigoBarras;
     private Set<ItemVenda> itemVendas = new HashSet<ItemVenda>(0);
     private Set<RelatorioEntrada> relatorioEntradas = new HashSet<RelatorioEntrada>(0);
     private ProdutoFornecedor produtoFornecedor;

    public Produto() {
    }

	
    public Produto(Tipoproduto tipoproduto, String nomeProduto, int quantidade, double valorCompra, double valorVenda, int estoqueMax, int estoqueMin, String unidade, double desconto, Date validade, int codigoBarras) {
        this.tipoproduto = tipoproduto;
        this.nomeProduto = nomeProduto;
        this.quantidade = quantidade;
        this.valorCompra = valorCompra;
        this.valorVenda = valorVenda;
        this.estoqueMax = estoqueMax;
        this.estoqueMin = estoqueMin;
        this.unidade = unidade;
        this.desconto = desconto;
        this.validade = validade;
        this.codigoBarras = codigoBarras;
    }
    public Produto(Tipoproduto tipoproduto, String nomeProduto, int quantidade, double valorCompra, double valorVenda, int estoqueMax, int estoqueMin, String unidade, double desconto, Date validade, int codigoBarras, Set<ItemVenda> itemVendas, Set<RelatorioEntrada> relatorioEntradas, ProdutoFornecedor produtoFornecedor) {
       this.tipoproduto = tipoproduto;
       this.nomeProduto = nomeProduto;
       this.quantidade = quantidade;
       this.valorCompra = valorCompra;
       this.valorVenda = valorVenda;
       this.estoqueMax = estoqueMax;
       this.estoqueMin = estoqueMin;
       this.unidade = unidade;
       this.desconto = desconto;
       this.validade = validade;
       this.codigoBarras = codigoBarras;
       this.itemVendas = itemVendas;
       this.relatorioEntradas = relatorioEntradas;
       this.produtoFornecedor = produtoFornecedor;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_produto", unique=true, nullable=false)
    public Integer getIdProduto() {
        return this.idProduto;
    }
    
    public void setIdProduto(Integer idProduto) {
        this.idProduto = idProduto;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_tipoProduto", nullable=false)
    public Tipoproduto getTipoproduto() {
        return this.tipoproduto;
    }
    
    public void setTipoproduto(Tipoproduto tipoproduto) {
        this.tipoproduto = tipoproduto;
    }

    
    @Column(name="nome_produto", unique=true, nullable=false, length=30)
    public String getNomeProduto() {
        return this.nomeProduto;
    }
    
    public void setNomeProduto(String nomeProduto) {
        this.nomeProduto = nomeProduto;
    }

    
    @Column(name="quantidade", nullable=false)
    public int getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(int quantidade) {
        this.quantidade = quantidade;
    }

    
    @Column(name="valor_compra", nullable=false, precision=22, scale=0)
    public double getValorCompra() {
        return this.valorCompra;
    }
    
    public void setValorCompra(double valorCompra) {
        this.valorCompra = valorCompra;
    }

    
    @Column(name="valor_venda", nullable=false, precision=22, scale=0)
    public double getValorVenda() {
        return this.valorVenda;
    }
    
    public void setValorVenda(double valorVenda) {
        this.valorVenda = valorVenda;
    }

    
    @Column(name="estoque_max", nullable=false)
    public int getEstoqueMax() {
        return this.estoqueMax;
    }
    
    public void setEstoqueMax(int estoqueMax) {
        this.estoqueMax = estoqueMax;
    }

    
    @Column(name="estoque_min", nullable=false)
    public int getEstoqueMin() {
        return this.estoqueMin;
    }
    
    public void setEstoqueMin(int estoqueMin) {
        this.estoqueMin = estoqueMin;
    }

    
    @Column(name="unidade", nullable=false, length=15)
    public String getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(String unidade) {
        this.unidade = unidade;
    }

    
    @Column(name="desconto", nullable=false, precision=22, scale=0)
    public double getDesconto() {
        return this.desconto;
    }
    
    public void setDesconto(double desconto) {
        this.desconto = desconto;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="validade", nullable=false, length=10)
    public Date getValidade() {
        return this.validade;
    }
    
    public void setValidade(Date validade) {
        this.validade = validade;
    }

    
    @Column(name="codigo_barras", unique=true, nullable=false)
    public int getCodigoBarras() {
        return this.codigoBarras;
    }
    
    public void setCodigoBarras(int codigoBarras) {
        this.codigoBarras = codigoBarras;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="produto")
    public Set<ItemVenda> getItemVendas() {
        return this.itemVendas;
    }
    
    public void setItemVendas(Set<ItemVenda> itemVendas) {
        this.itemVendas = itemVendas;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="produto")
    public Set<RelatorioEntrada> getRelatorioEntradas() {
        return this.relatorioEntradas;
    }
    
    public void setRelatorioEntradas(Set<RelatorioEntrada> relatorioEntradas) {
        this.relatorioEntradas = relatorioEntradas;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="produto")
    public ProdutoFornecedor getProdutoFornecedor() {
        return this.produtoFornecedor;
    }
    
    public void setProdutoFornecedor(ProdutoFornecedor produtoFornecedor) {
        this.produtoFornecedor = produtoFornecedor;
    }




}


